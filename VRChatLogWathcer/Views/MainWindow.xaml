<Window
    x:Class="VRChatLogWathcer.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
    xmlns:v="clr-namespace:VRChatLogWathcer.Views"
    xmlns:vm="clr-namespace:VRChatLogWathcer.ViewModels"
    xmlns:m="clr-namespace:VRChatLogWathcer.Models"
    xmlns:data="clr-namespace:VRChatLogWathcer.Data"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    d:DataContext="{d:DesignInstance Type=vm:MainWindowViewModel}"
    mc:Ignorable="d"
    Title="VRChat Lifelog"
    Width="900" MinWidth="900"
    Height="600" MinHeight="350"
    Closing="Window_Closing"
    WindowStartupLocation="CenterScreen">

  <!--<Window.DataContext>
            <vm:MainWindowViewModel />
        </Window.DataContext>-->

  <behaviors:Interaction.Triggers>
    <!--  When ContentRendered event raised, Initialize method of ViewModel would be called.  -->
    <behaviors:EventTrigger EventName="ContentRendered">
      <l:LivetCallMethodAction MethodName="Initialize" MethodTarget="{Binding}" />
    </behaviors:EventTrigger>

    <!--  Dispose method is called, when Window closing.  -->
    <!--MEMO:VMは再利用されるため画面を閉じてもDisposeしない-->
    <!--<behaviors:EventTrigger EventName="Closed">
      <l:DataContextDisposeAction />
    </behaviors:EventTrigger>-->

    <!--  If you make user choose 'OK or Cancel' closing Window, then please use Window Close cancel Behavior.  -->

    <!--<l:InteractionMessageTrigger>
            <l:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>-->

    <l:InteractionMessageTrigger MessageKey="Transition" Messenger="{Binding Messenger}">
      <l:TransitionInteractionMessageAction/>
    </l:InteractionMessageTrigger>
  </behaviors:Interaction.Triggers>

  <Grid>
    <Grid.Resources>
      <Style TargetType="iconPacks:PackIconCoolicons">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 0 5 0"/>
        <Setter Property="Background" Value="Transparent"/>
      </Style>
    </Grid.Resources>
    
    <Grid.RowDefinitions>
      <RowDefinition Height="25"/>
      <RowDefinition Height="*"/>
      <RowDefinition Height="25"/>
    </Grid.RowDefinitions>

    <Menu Grid.Row="0">
      <MenuItem Header="ファイル(_F)">
        <MenuItem Header="終了(_X)"/>
      </MenuItem>
      <MenuItem Header="ツール(_T)">
        <MenuItem Header="オプション(_O)" Command="{Binding OpenSettingWindowCommand}"/>
      </MenuItem>
    </Menu>

    <Grid Grid.Row="1">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <GroupBox Grid.Row="0" Header="検索条件" Margin="2 5">
        <Grid Margin="0 5 0 0">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="25"/>
          </Grid.RowDefinitions>

          <Grid.Resources>
            <Style TargetType="CheckBox">
              <Setter Property="VerticalContentAlignment" Value="Center"/>
              <Setter Property="Margin" Value="0 0 5 0"/>
              <Setter Property="ToolTip" Value="検索条件に含める"/>
            </Style>
          </Grid.Resources>

          <!--表示期間指定-->
          <Grid Grid.Row="0" Margin="0 0 0 5">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="150"/>
              <ColumnDefinition Width="20"/>
              <ColumnDefinition Width="150"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid.Resources>
              <Style TargetType="DatePicker">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
              </Style>
            </Grid.Resources>

            <iconPacks:PackIconCoolicons Grid.Column="0" Kind="Calendar" ToolTip="日付"/>
            <CheckBox Grid.Column="1" IsChecked="{Binding FilterByDate.Value}" ToolTip="日付による絞り込みを有効にする"/>
            <DatePicker Grid.Column="2" SelectedDate="{Binding First.Value}" ToolTip="検索範囲の開始日付"/>
            <TextBlock Grid.Column="3" Text="~" 
                       HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <DatePicker Grid.Column="4" SelectedDate="{Binding Last.Value}" ToolTip="検索範囲の終了日付"/>
          </Grid>

          <!--検索対象人物-->
          <Grid Grid.Row="1" Margin="0 0 0 5">
            <Grid.RowDefinitions>
              <RowDefinition Height="25"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <iconPacks:PackIconCoolicons Grid.Column="0" Kind="User" ToolTip="ユーザー"/>
            <CheckBox Grid.Column="1" IsChecked="{Binding FilterByPerson.Value}" ToolTip="ユーザーによる絞り込みを有効にする"/>
            <TextBox Grid.Column="2" Text="{Binding PersonQuery.Value}" VerticalContentAlignment="Center" ToolTip="ユーザー名"/>

            <!--あいまい検索用絞り込み-->
            <ItemsControl Grid.Row="1" Grid.Column="2" ItemsSource="{Binding MatchedUserNames.Value}" MaxHeight="100" IsTabStop="False">
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <Button Content="{Binding}" Padding="2" Margin="0 2 3 0" Background="Transparent"
                          Command="{Binding DataContext.SelectUserNameCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                          CommandParameter="{Binding}"/>
                </DataTemplate>
              </ItemsControl.ItemTemplate>

              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <!--<WrapPanel Orientation="Horizontal"/>-->
                  <UniformGrid Columns="6"/>
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>

              <ItemsControl.Template>
                <ControlTemplate>
                  <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                    <ItemsPresenter/>
                  </ScrollViewer>
                </ControlTemplate>
              </ItemsControl.Template>
            </ItemsControl>
          </Grid>

          <!--ワールド名検索-->
          <Grid Grid.Row="2" Margin="0 0 0 5">
            <Grid.RowDefinitions>
              <RowDefinition Height="25"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <iconPacks:PackIconCoolicons Grid.Column="0" Kind="LocationOutline" ToolTip="ワールド"/>
            <CheckBox Grid.Column="1" IsChecked="{Binding FilterByWorldName.Value}" ToolTip="ワールドによる絞り込みを有効にする"/>
            <TextBox Grid.Column="2" Text="{Binding WorldNameQuery.Value}" VerticalContentAlignment="Center" ToolTip="ワールド名"/>

            <!--あいまい検索用絞り込み-->
            <ItemsControl Grid.Row="1" Grid.Column="2" ItemsSource="{Binding MatchedWorldNames.Value}" MaxHeight="100" IsTabStop="False">
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <Button Content="{Binding}" Padding="2" Margin="0 2 3 0" Background="Transparent"
                          Command="{Binding DataContext.SelectWorldNameCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                          CommandParameter="{Binding}"/>
                </DataTemplate>
              </ItemsControl.ItemTemplate>

              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <!--<WrapPanel Orientation="Horizontal"/>-->
                  <UniformGrid Columns="3"/>
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>

              <ItemsControl.Template>
                <ControlTemplate>
                  <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                    <ItemsPresenter/>
                  </ScrollViewer>
                </ControlTemplate>
              </ItemsControl.Template>
            </ItemsControl>
          </Grid>

          <!--絞り込み実行ボタン-->
          <StackPanel Grid.Row="3" Orientation="Horizontal">
            <StackPanel.Resources>
              <Style TargetType="Button">
                <Setter Property="Width" Value="200"/>
                <Setter Property="Margin" Value="0 0 5 0"/>
              </Style>
            </StackPanel.Resources>

            <Button Command="{Binding ApplyFilterCommand}">
              <StackPanel Orientation="Horizontal">
                <iconPacks:PackIconCoolicons Kind="FilterOutline" Height="12"/>
                <TextBlock Text="絞り込み"/>
              </StackPanel>
            </Button>
            <Button Command="{Binding ShowPicturesTakenCommand}"
                    ToolTip="絞り込み対象ユーザーが写っている可能性のある写真を一覧表示します．">
              <StackPanel Orientation="Horizontal">
                <iconPacks:PackIconCoolicons Kind="UserSquare" Height="12"/>
                <TextBlock Text="写真を表示"/>
              </StackPanel>
            </Button>
          </StackPanel>
        </Grid>
      </GroupBox>

      <Grid Grid.Row="1" Margin="5 0 5 5">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!--場所の履歴情報-->
        <Button Grid.Column="0"
                Command="{Binding ShowPicturesTakenHereCommand}"
                CommandParameter="{Binding SelectedLocationHistory.Value}"
                ToolTip="選択した場所で撮影した写真を一覧表示します．"
                Height="25" Width="220" HorizontalAlignment="Left"
                Margin="0 0 0 5">
          <StackPanel Orientation="Horizontal">
            <iconPacks:PackIconCoolicons Kind="Image" Height="12"/>
            <TextBlock Text="選択した場所で撮影した写真を表示"/>
          </StackPanel>
        </Button>

        <DataGrid Grid.Row="1" Grid.Column="0"
                  ItemsSource="{Binding LocationHistories.Value}"
                  SelectedItem="{Binding SelectedLocationHistory.Value}"
                  IsReadOnly="True"
                  AutoGenerateColumns="False"
                  SelectionMode="Single">
          <DataGrid.Columns>
            <DataGridTemplateColumn Header="World Name">
              <DataGridTemplateColumn.CellTemplate>
                <DataTemplate DataType="{x:Type data:LocationHistory}">
                  <TextBlock Text="{Binding WorldName}" ToolTip="{Binding WorldId}" Margin="5 0"/>
                </DataTemplate>
              </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTextColumn Header="Type" Binding="{Binding Type}"/>
            <DataGridTextColumn Header="Joined" Binding="{Binding Joined, StringFormat=yyyy/MM/dd HH:mm:ss}"/>
            <DataGridTextColumn Header="Left" Binding="{Binding Left, StringFormat=yyyy/MM/dd HH:mm:ss}"/>
          </DataGrid.Columns>
          <DataGrid.RowStyle>
            <Style TargetType="DataGridRow">
              <Setter Property="Tag"
                      Value="{Binding DataContext.ShowPicturesTakenHereCommand, RelativeSource={RelativeSource AncestorType=Window}}"/>
              <Setter Property="ContextMenu">
                <Setter.Value>
                  <ContextMenu>
                    <MenuItem Header="ここで撮影した写真を表示"
                              Command="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                              CommandParameter="{Binding}"/>
                  </ContextMenu>
                </Setter.Value>
              </Setter>
            </Style>
          </DataGrid.RowStyle>
        </DataGrid>

        <GridSplitter Grid.RowSpan="2" Grid.Column="1" Width="5" VerticalAlignment="Stretch" HorizontalAlignment="Center" Margin="3 0"/>

        <!--滞在プレイヤー履歴情報-->        
        <DataGrid Grid.Row="1" Grid.Column="2"
                  ItemsSource="{Binding JoinLeaveHistories.Value}"
                  IsReadOnly="True"
                  AutoGenerateColumns="False">
          <DataGrid.Columns>
            <DataGridTemplateColumn Header="Name">
              <DataGridTemplateColumn.CellTemplate>
                <DataTemplate DataType="{x:Type data:JoinLeaveHistory}">
                  <TextBlock Text="{Binding PlayerName}" Margin="5 0"/>
                </DataTemplate>
              </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTextColumn Header="Joined" Binding="{Binding Joined, StringFormat=yyyy/MM/dd HH:mm:ss}"/>
            <DataGridTextColumn Header="Left" Binding="{Binding Left, StringFormat=yyyy/MM/dd HH:mm:ss}"/>
          </DataGrid.Columns>
          <DataGrid.RowStyle>
            <Style TargetType="DataGridRow">
              <Setter Property="Tag"
                      Value="{Binding DataContext.SelectUserNameCommand, RelativeSource={RelativeSource AncestorType=Window}}"/>
              <Setter Property="ContextMenu">
                <Setter.Value>
                  <ContextMenu>
                    <MenuItem Header="このユーザーで絞り込み"
                              Command="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                              CommandParameter="{Binding PlayerName}"/>
                  </ContextMenu>
                </Setter.Value>
              </Setter>
            </Style>
          </DataGrid.RowStyle>
        </DataGrid>
      </Grid>
    </Grid>

    <StatusBar Grid.Row="2">
      <StatusBarItem DockPanel.Dock="Right">
        <TextBlock>
          <TextBlock.Style>
            <Style TargetType="TextBlock">
              <Setter Property="Text" Value="{Binding DataContext.WatchingFileCount, RelativeSource={RelativeSource AncestorType=Window}, StringFormat={}{0} 個のログファイルを監視中}"/>
              <Style.Triggers>
                <DataTrigger Binding="{Binding DataContext.WatchingFileCount, RelativeSource={RelativeSource AncestorType=Window}}" Value="0">
                  <Setter Property="Text" Value=""/>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </TextBlock.Style>
        </TextBlock>
      </StatusBarItem>
      <StatusBarItem/>
    </StatusBar>
  </Grid>
</Window>