<Window x:Class="VRChatLifelog.Views.SettingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:VRChatLifelog.Views"
        xmlns:viewmodels="clr-namespace:VRChatLifelog.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        d:DataContext="{d:DesignInstance Type=viewmodels:SettingWindowViewModel}"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="VRChat Lifelog - 設定" Height="350" Width="525"
        WindowStartupLocation="CenterOwner">

    <!--
    If you want to add a ViewModel class to DataContext, then please add your ViewModels namespace to the Window tag like below.
    xmlns:vm="clr-namespace:YourViewModelNamespace"
    
    And then add the following tag.
    <Window.DataContext>
        <vm:SettingWindowViewModel />
    </Window.DataContext>
    -->
    <behaviors:Interaction.Triggers>
        <!-- When ContentRendered event raised, Initialize method of ViewModel would be called. -->
        <behaviors:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize" />
        </behaviors:EventTrigger>

        <!-- Dispose method is called, when Window closing. -->
        <behaviors:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </behaviors:EventTrigger>

        <!-- If you make user choose 'OK or Cancel' closing Window, then please use Window Close cancel Behavior. -->

        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="Confirm">
            <l:ConfirmationDialogInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="WindowAction">
            <l:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>
    </behaviors:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="5"/>
        </Grid.RowDefinitions>

        <Grid.Resources>
            <Style TargetType="Control">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>
        </Grid.Resources>

        <TextBlock Text="設定" FontSize="14" VerticalAlignment="Center" Margin="5 0 0 0"/>
        <Border BorderThickness="0 0 0 1" BorderBrush="Gray"/>

        <Grid Grid.Row="1" Margin="5 0 0 0">
            <Grid.Resources>
                <Style TargetType="CheckBox">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
            </Grid.Resources>
            
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
            </Grid.RowDefinitions>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <CheckBox Grid.Row="0" Grid.ColumnSpan="2" Content="Windows起動時に自動起動する" IsChecked="{Binding IsRunAtStartup}"/>
        </Grid>

        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center">
            <StackPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Width" Value="150"/>
                </Style>
            </StackPanel.Resources>
            <Button Content="OK" Command="{Binding OkCloseCommand}"/>
            <Button Content="Cancel" Command="{Binding CancelCloseCommand}" Margin="10 0 0 0"/>
        </StackPanel>
    </Grid>
</Window>